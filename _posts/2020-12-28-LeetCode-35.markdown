---
layout: post 
title:  35. Search Insert Position
date:   2020-12-28 21:40
image:  leetcode.jpeg
tags:   LeetCode
---

## Problem

Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

```
Example 1:

Input: nums = [1,3,5,6], target = 5
Output: 2

Example 2:

Input: nums = [1,3,5,6], target = 2
Output: 1

Example 3:

Input: nums = [1,3,5,6], target = 7
Output: 4

Example 4:

Input: nums = [1,3,5,6], target = 0
Output: 0

Example 5:

Input: nums = [1], target = 0
Output: 0
```

<!-- Line breaks -->
<br />

Constraints:

* 1 <= nums.length <= 104
* -104 <= nums[i] <= 104
* nums contains distinct values sorted in ascending order.
* -104 <= target <= 104

## Solution

The given array is a sorted array of distinct integers, it means we are going to use binary search to solve this problem. 

```java
class Solution 
{
    public int searchInsert(int[] nums, int target) 
    {
        if(nums == null || nums.length == 0)
            return 0;
        
        int start = 0;
        int end = nums.length-1;
        
        while(start <= end)
        {
            int mid = start + (end - start) / 2;
            
            if(nums[mid] == target)
                return mid;
            else if(nums[mid] < target)
                start = mid + 1;
            else
                end = mid -1;
        }
        
        return start;
    }
}
```

<!-- Line breaks -->
<br />

## Time & Space Complexity:

* **Time Complexity: O(Logn)**: Binary Search.
* **Space Complexity: O(1)**: Only created few variables.