---
layout: post
title:  14. Longest Common Prefix
date:   2020-11-07 13:17
image:  leetcode.jpeg
tags:   LeetCode
---

## Problem

Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

```
Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"

Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
```

<!-- Line breaks -->
<br />

Constraints:

* 0 <= strs.length <= 200
* 0 <= strs[i].length <= 200
* strs[i] consists of only lower-case English letters.


## Solution

1. Get the first String from the given array. **String prefix = strs[0]**
2. Iterator the given array and check if current String is start with prefix.
3. If not, then we need to remove the last character of prefix and check again.

```java
class Solution 
{
    public String longestCommonPrefix(String[] strs) 
    {
        if(strs == null || strs.length == 0)
            return "";
        
        String prefix = strs[0];
        
        for(int i=1; i<strs.length; i++)
        {
            while(!strs[i].startsWith(prefix))
            {
                prefix = prefix.substring(0, prefix.length()-1);
            }
        }
        
        return prefix;
    }
}
```

<!-- Line breaks -->
<br />

## Time & Space Complexity:

* **Time Complexity: O(1)**: length of String s.
* **Space Complexity: O(1)**: Constant space is used.
