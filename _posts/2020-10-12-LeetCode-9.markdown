---
layout: post
title:  9. Palindrome Number
date:   2020-10-12 22:18
image:  leetcode.jpeg
tags:   LeetCode
---

## Problem

Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Follow up: Could you solve it without converting the integer to a string?

```
Example 1:

Input: x = 121
Output: true

Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.

Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.

Example 4:

Input: x = -101
Output: false
```

<!-- Line breaks -->
<br />

Constraints:

* -231 <= x <= 231 - 1

## Solution

In order to check whether an integer is a palindrome, we can reverse the the given integer. Then compare it with the original number to see if they are same or not.

```java
class Solution 
{
    public boolean isPalindrome(int x) 
    {
        // handle special cases
        if(x < 0)
            return false;
        
        if(x >= 0 && x <= 9)
            return true;
        
        // reverse integer
        int reverse = 0;
        int tmp = x;
        
        while(tmp > 0)
        {
            reverse = reverse * 10 + tmp % 10;
            tmp = tmp / 10;
        }
        
        return x == reverse;
        
    }
}
```

<!-- Line breaks -->
<br />

## Time & Space Complexity:

* **Time Complexity: O(log<sub>10</sub>(n)))**: We traverse the given String.
* **Space Complexity: O(1)**: We only declare few avriables. 






